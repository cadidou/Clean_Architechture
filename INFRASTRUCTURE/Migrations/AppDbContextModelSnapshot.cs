// <auto-generated />
using System;
using INFRASTRUCTURE;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace INFRASTRUCTURE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DOMAIN.Entities.Adherant", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero_carte")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_inscription")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_sanction")
                        .HasColumnType("datetime2");

                    b.Property<int>("nbr_emprunt")
                        .HasColumnType("int");

                    b.Property<string>("prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("sanctionne")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("adherants");
                });

            modelBuilder.Entity("DOMAIN.Entities.emprunt", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdherantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OuvrageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("dateEmprunt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateRetour")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdherantId");

                    b.HasIndex("OuvrageId");

                    b.ToTable("emprunter");
                });

            modelBuilder.Entity("DOMAIN.Entities.ouvrage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Nbr")
                        .HasColumnType("int");

                    b.Property<string>("auteur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("consultable")
                        .HasColumnType("bit");

                    b.Property<string>("domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ouvrages");
                });

            modelBuilder.Entity("DOMAIN.Entities.emprunt", b =>
                {
                    b.HasOne("DOMAIN.Entities.Adherant", "Adherant")
                        .WithMany()
                        .HasForeignKey("AdherantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOMAIN.Entities.ouvrage", "Ouvrage")
                        .WithMany()
                        .HasForeignKey("OuvrageId");

                    b.Navigation("Adherant");

                    b.Navigation("Ouvrage");
                });
#pragma warning restore 612, 618
        }
    }
}
